---
- name: Create mongofed config folder
  file:
    path: "~/{{ var_demofolder_name }}/{{ var_mongofed_configfolder_name }}"
    state: directory

- name: Backup kubeconfig files
  copy:
    src: "~/{{ var_demofolder_name }}/{{ item.name }}/auth/kubeconfig"
    dest: "~/{{ var_demofolder_name }}/{{ item.name }}/auth/bkp_kubeconfig"
  loop: "{{ var_cluster_info }}"

- name: Modify kubeconfig files
  replace:
    path: "~/{{ var_demofolder_name }}/{{ item.name }}/auth/kubeconfig"
    regexp: 'admin'
    replace: "{{ item.name }}"
  loop: "{{ var_cluster_info }}"

- name: Concatenate kubeconfig paths
  set_fact:
    kube_concat_path: "{{ kube_concat_path | default() }}:~/{{ var_demofolder_name }}/{{ item.name }}/auth/kubeconfig"
    kube_concat_name: "{{ kube_concat_name | default('aws') }}-{{ item.name }}"
  loop: "{{ var_cluster_info }}"

- name: Remove kubeconfig concat path first separator
  set_fact:
    kube_concat_path: "{{ kube_concat_path | regex_replace('^:(.*)$', '\\1') }}"

#- name: Show kube_concat_path content
#  debug:
#    var: kube_concat_path

#- name: Show kube_concat_name content
#  debug:
#    var: kube_concat_name

- name: Flatten kube concat path
  shell: "export KUBECONFIG={{ kube_concat_path }}; oc config view --flatten > {{ kube_concat_name }}"
  args:
    chdir: "~/{{ var_demofolder_name }}/{{ var_mongofed_configfolder_name }}"
#  environment:
#    KUBECONFIG: "{{ kube_concat_path }}"
  register: occfgv_flatten

#- name: Show occfgv_flatten content
#  debug:
#    var: occfgv_flatten

- name: Update kubeconfig concat path
  set_fact:
    kube_concat_path: "~/{{ var_demofolder_name }}/{{ var_mongofed_configfolder_name }}/{{ kube_concat_name }}"

- name: Set context "{{ var_kubefed_operator }}"
  shell: "export KUBECONFIG={{ kube_concat_path }}; oc config set-context {{ var_kubefed_operator }}"
#  environment:
#    KUBECONFIG: "{{ kube_concat_path }}"
  register: occfgsc

#- name: Show occfgsc content
#  debug:
#    var: occfgsc

- name: Enable the Kubefed Controller Manager
  k8s:
    kubeconfig: "{{ kube_concat_path }}"
    context: "{{ var_kubefed_operator }}"
    state: "{{ install_state }}"
    definition:
      apiVersion: kubefed-operator:v0.1.0-rc3
      kind: "{{ var_obj_kind }}"
      metadata:
        name: "{{ var_obj_metadata_name }}"
      spec:
        targetNamespace: "{{ var_obj_spec_targetnamespace }}"
        scope: Namespaced

#- name: Federate OpenShift clusters
#  shell: "kubefedctl join {{ item.name }} --cluster-context {{  item.name }} --host-cluster-context {{ var_kubefed_operator }} --v=2 --kubefed-namespace={{ var_obj_spec_targetnamespace }}"
#  environment:
#    KUBECONFIG: "{{ kube_concat_path }}"
#  loop: "{{ var_cluster_info }}"
#  register: fedocp

#- name: Show fedocp content
#  debug:
#    var: fedocp

#- name: Enable federating of objects
#  shell: "kubefedctl enable {{ item }} --kubefed-namespace {{ var_obj_spec_targetnamespace }}"
#  environment:
#    KUBECONFIG: "{{ kube_concat_path }}"
#  loop: "{{ var_fed_obj_list }}"
#  register: fedobj


#- name: Show fedobj content
#  debug:
#    var: fedobj
